@model CatchFilms.Models.Room
@Styles.Render("~/Content/css/style-seats.css")
@Scripts.Render("~/Scripts/jquery.seat-charts.js")
@{
    ViewBag.Title = "Registrar sala";
}

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="seatsList" id="seat_list" value="" />
        <div class="row">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="col-md-12">@Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })<br /></div>
            }
            @if (ViewBag.OkMessage != null && ViewBag.OkMessage != "")
            {
                <div class="col-md-12">
                    <div class="alert alert-success">
                        <strong>Finalizado! </strong>@ViewBag.OkMessage
                    </div>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.number, htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.TextAreaFor(model => model.description, htmlAttributes: new { @class = "form-control form-control-full" })
                            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <label class="control-label">Filas</label>
                        <div class="form-group">
                            <input name="rows" id="rows" type="number" class="form-control" value="6" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label class="control-label">Columnas</label>
                        <div class="form-group">
                            <input name="columns" id="columns" type="number" class="form-control" value="13" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label class="control-label">Total de butacas</label>
                        <div class="form-group">
                            <input type="number" id="seats" class="form-control" disabled />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <button type="button" class="btn btn-default" onclick="define_seats()">Generar butacas</button>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <button type="submit">Crear nueva sala</button>
                        <button type="button" class="btn btn-success">volver a la lista de salas</button>
                    </div>
                </div>
            </div>
            <div class="col-md-6" style=" overflow: auto;">
                <div style="min-width: 1198px; max-height: 300px;">
                    <div id="seat-map" style="display: none;">
                        <div class="front">PANTALLA</div>
                    </div>
                </div>
                <div style="clear:both"></div>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#rows").keyup(function () {
            if ($("#columns").val() != "") {
                $("#seats").val(parseInt($("#rows").val()) * parseInt($("#columns").val()))
            }
        });

        $("#columns").keyup(function () {
            if ($("#rows").val() != "") {
                $("#seats").val(parseInt($("#rows").val()) * parseInt($("#columns").val()))
            }
        });
        define_seats();
        $("#seats").val(parseInt($("#rows").val()) * parseInt($("#columns").val()));
    });

    function define_seats() {
        var array = [];
        if ($("#rows").val() != "" && $("#columns").val() != "") {
            if (parseInt($("#rows").val()) >= 3 && parseInt($("#rows").val()) <= 10 && parseInt($("#columns").val()) >= 6 && parseInt($("#columns").val()) <= 20) {
                for (let i = 0; i < parseInt($("#rows").val()); i++){
                    var row = "";

                    for (let c = 0; c < parseInt($("#columns").val()); c++){
                        row += "a";
                    }
                    array.push(row);
                }

                $('.seatCharts-row').remove();
                $('.seatCharts-legendItem').remove();
                $('#seat-map,#seat-map *').unbind().removeData();

                define_room(array);
            } else {
                alert("Los valores máximos permitidos son 10 filas y 20 columnas, minimos 3 filas, 6 columnas");
            }
        }
        console.log(array);
    }

    function define_room(array) {
        $('#seat-map').show();
        $('#seat_list').val(JSON.stringify(array));
        var sc = $('#seat-map').seatCharts({
            map: array,
            naming: {
                top: false,
                getLabel: function (character, row, column) {
                    return column;
                }
            },
            legend: { //Definition legend
                node: $('#legend'),
                items: [
                    ['a', 'available', 'Disponible'],
                    ['a', 'unavailable', 'Reservado'],
                    ['a', 'selected', 'Selecionado']
                ]
            },
            click: function () { //Click event
                if (this.status() == 'available' && cont <= max) { //optional seat
                    return 'selected';
                } else if (this.status() == 'selected') { //Checked
                    return 'available';
                } else if (this.status() == 'unavailable') { //sold
                    return 'unavailable';
                } else {
                    return this.style();
                }
            }
        });
    }
</script>
