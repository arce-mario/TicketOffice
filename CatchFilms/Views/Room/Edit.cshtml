@model CatchFilms.Models.Room
@Styles.Render("~/Content/css/style-seats.css")
@Scripts.Render("~/Scripts/jquery.seat-charts.js")
@{
    ViewBag.Title = $"Editar información de la \"Sala {Model.number}\"";
}
<div class="container">
    <div class="breadcrumbs">
        @Html.ActionLink("Inicio", "index", new { controller = "home" })
        @Html.ActionLink("Lista de salas", "index", new { controller = "room" })
        <span>@ViewBag.Title</span>
    </div>
    <div class="row">
        <div class="col-md-12"><div class="section-title">@ViewBag.Title</div><br /></div>
    </div>

    @using (@Html.BeginForm("EditReg", "room", FormMethod.Post, new { id = "frmId"}))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.roomID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.seatArray, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.notAvailable, new { htmlAttributes = new { @class = "form-control" } })
        <div class="row">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="col-md-12">@Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })<br /></div>
            }
            @if (ViewBag.InfoMessage != null && ViewBag.InfoMessage != "")
            {
                <div class="col-md-12">
                    <div class="alert alert-success">
                        <strong>Finalizado! </strong>@ViewBag.InfoMessage
                    </div>
                </div>
            }
            @if (ViewBag.ErrorMessage != null && ViewBag.ErrorMessage != "")
            {
                <div class="col-md-12">
                    <div class="alert alert-danger" role="alert">
                        <strong>Alerta!</strong> @ViewBag.ErrorMessage
                    </div>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.number, htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.TextAreaFor(model => model.description, htmlAttributes: new { @class = "form-control form-control-full" })
                            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    @Html.HiddenFor(model => model.columns, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.rows, new { htmlAttributes = new { @class = "form-control" } })
                    <div class="col-md-12">
                        <label class="control-label">Total de butacas</label>
                        <div class="form-group">
                            <input type="number" id="seats" class="form-control" disabled />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <strong class="feature-subtitle">Leyenda</strong>
                        <div id="legend"></div>
                    </div>
                    <div class="col-md-8">
                        <strong class="feature-subtitle">Registros a modificar</strong>
                        <ul id="selected-seats" class="scrollbar scrollbar1"></ul>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <button type="button" onclick="send_changes()">Editar datos sala</button>
                        <a href="@Url.Action("index","room")" class="btn btn-success">volver a la lista de salas</a>
                    </div>
                </div>
            </div>
            <div class="col-md-6" style=" overflow: auto;">
                <div style="min-width: 1198px; max-height: 300px;">
                    <div id="seat-map" style="display: none;">
                        <div class="front">PANTALLA</div>
                    </div>
                </div>
                <div style="clear:both"></div>
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    var cont = 1; var price = 0; var sc; var unavailables = JSON.parse($("#notAvailable").val());
    var $cart = $('#selected-seats'), //Sitting Area
        $counter = $('#counter'),
        $total = $('#total'); //Votes
    $(document).ready(function () {
        define_room(JSON.parse($('#seatArray').val()));
        $("#seats").val(parseInt($("#rows").val()) * parseInt($("#columns").val()));
        max = $('#seats').val();
    });

    function send_changes() {
        defineListSeats();
        $('#frmId').submit();
    }

    function define_room(array) {
        $('#seat-map').show();
        sc = $('#seat-map').seatCharts({
            map: array,
            naming: {
                top: false,
                getLabel: function (character, row, column) {
                    return column;
                }
            },
            legend: { //Definition legend
                node: $('#legend'),
                items: [
                    ['a', 'available', 'Disponible'],
                    ['a', 'unavailable', 'No disponible'],
                    ['a', 'selected', 'Selecionado']
                ]
            },
            click: function () { //Click event
                if (this.status() == 'available' && cont <= max) { //optional seat
                    cont++;
                    $counter.text(sc.find('selected').length + 1);
                    showConfig(this, 1);
                    return 'selected';
                } else if (this.status() == 'selected') { //Checked
                    var id = this.settings.id;
                    var result = 'available';
                    if (cont > 1) {
                        cont--;
                    }
                    $counter.text(sc.find('selected').length - 1);
                    unavailables.forEach(function (element) {
                        if (id == element) {
                            result = 'unavailable';
                            var index = unavailables.indexOf(element);
                            unavailables.splice(index, 1);
                        }
                    });
                    showConfig(this, 2);
                    return result;
                } else if (this.status() == 'unavailable') { //sold
                    cont++;
                    $counter.text(sc.find('selected').length + 1);
                    unavailables.push(this.settings.id);
                    showConfig(this, 1);
                    return 'selected';
                } else {
                    return this.style();
                }
            }
        });
        sc.get(unavailables).status('unavailable');
    }

    function defineListSeats() {
        var notAvailable = $("#notAvailable");
        var array = [];
        sc.find('selected').each(function () {
            array.push(this.settings.id);
        });
        notAvailable.val(JSON.stringify(array));
        console.log(notAvailable.val());
    }

    function showConfig(reg, opc) {
        if (opc == 1){
            $('<li>Butaca: ' + reg.settings.id.split("_")[0] + reg.settings.id.split("_")[1] + '</li>')
                .attr('id', 'cart-item-' + reg.settings.id)
                .data('seatId', reg.settings.id)
                .appendTo($cart);
        } else {
            $('#cart-item-' + reg.settings.id).remove();
        }
    }
</script>